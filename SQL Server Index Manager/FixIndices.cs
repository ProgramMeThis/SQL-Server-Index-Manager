using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Collections;
using Microsoft.SqlServer;
using Microsoft.SqlServer.Management.Smo;
using Microsoft.SqlServer.Management.Common;

namespace SQL_Server_Index_Manager
{
    public partial class FixIndices : Form
    {

        SqlConnection indexManagerSQLConnection = new SqlConnection();

        internal SqlConnection IndexManagerSQLConnection
        {
            set { indexManagerSQLConnection = value; }
        }

        internal ArrayList reorganizeList { get; set; }
        internal ArrayList rebuildList { get; set; }
        internal string sqlServerVersion { get; set; }
        internal string generatedSqlString { get; set; }

        string sqlIntro = "/*\r\n" +
        " * Index Maintenance Script for $serveranddatabasename\r\n" +
        " *\r\n" +
        " * Generated by SQL Server Administrator Laboratory on $datetime\r\n" +
        " *\r\n" +
        " * Maintains the indices of SQL Server instance by reorganizing or\r\n" +
        " * rebuilding them based on the recommendations determined by\r\n" +
        " * SQL Server Administrator Laboratory.\r\n" +
        " *\r\n" +
        " * You require ALTER permissions to run this script.\r\n" +
        " */\r\n\r\n";

        //internal string serverAndDatabaseName = "";
        internal string serverAndDatabaseName { get; set; }


        public FixIndices()
        {
            InitializeComponent();
        }

        private void FixIndices_Load(object sender, EventArgs e)
        {
            sqlIntro = sqlIntro.Replace("$datetime", DateTime.Now.ToString());
            sqlIntro = sqlIntro.Replace("$serveranddatabasename", serverAndDatabaseName);
            sqlScriptTextBox.Text = sqlIntro;
            generatedSqlString = generateSQLScript(reorganizeList, rebuildList);
            sqlScriptTextBox.Text += generatedSqlString;

            summaryLabel.Text = "Rebuilding " + rebuildList.Count + " indices\r\n\r\n" + "Reorganizing " + reorganizeList.Count + " indices";
        }

        internal string generateSQLScript(ArrayList reorganizeArrayList, ArrayList rebuildArrayList)
        {
            StringBuilder sqlQueryStringBuilder = new StringBuilder();
            for (int i = 0; i < reorganizeArrayList.Count; i++)
            {
                if (sqlServerVersion.Contains("2000"))
                {
                    string[] indexArray = reorganizeArrayList[i].ToString().Split('.');
                    sqlQueryStringBuilder.AppendLine("PRINT N'Reorganizing Index " + indexArray[3] + " on " + indexArray[0] + "." + indexArray[1] + "." + indexArray[2] + "...';\r\n" + "DBCC INDEXDEFRAG( N'" + removeSquareBrackets(indexArray[0]) + "', N'" + indexArray[1] + "." + indexArray[2] + "', N'" + removeSquareBrackets(indexArray[3]) + "' ) WITH NO_INFOMSGS");
                    //sqlQueryStringBuilder.AppendLine("PRINT N'Reorganizing Index " + indexArray[3] + " on " + indexArray[0] + "." + indexArray[1] + "." + indexArray[2] + "...';\r\n" + "DBCC DBREINDEX( N'" + indexArray[1] + "." + indexArray[2] + "', N'" + removeSquareBrackets(indexArray[3]) + "' ) WITH NO_INFOMSGS");
                    sqlQueryStringBuilder.AppendLine("GO");
                    sqlQueryStringBuilder.AppendLine("");
                }
                else
                {
                    string[] indexArray = reorganizeArrayList[i].ToString().Split('.');
                    sqlQueryStringBuilder.AppendLine("PRINT N'Reorganizing Index " + indexArray[3] + " on " + indexArray[0] + "." + indexArray[1] + "." + indexArray[2] + "...';\r\n" + "ALTER INDEX " + indexArray[3] + " on " + indexArray[0] + "." + indexArray[1] + "." + indexArray[2] + " REORGANIZE;");
                    sqlQueryStringBuilder.AppendLine("GO");
                    sqlQueryStringBuilder.AppendLine("");
                }
            }

            for (int i = 0; i < rebuildArrayList.Count; i++)
            {
                if (sqlServerVersion.Contains("2000"))
                {
                    string[] indexArray = rebuildArrayList[i].ToString().Split('.');
                    sqlQueryStringBuilder.AppendLine("PRINT N'Rebuilding Index " + indexArray[3] + " on " + indexArray[0] + "." + indexArray[1] + "." + indexArray[2] + "...';\r\n" + "DBCC DBREINDEX( N'" + indexArray[1] + "." + indexArray[2] + "', N'" + removeSquareBrackets(indexArray[3]) + "' ) WITH NO_INFOMSGS");
                    sqlQueryStringBuilder.AppendLine("GO");
                    sqlQueryStringBuilder.AppendLine("");
                }
                else
                {
                    string[] indexArray = rebuildArrayList[i].ToString().Split('.');
                    sqlQueryStringBuilder.AppendLine("PRINT N'Rebuilding Index " + indexArray[3] + " on " + indexArray[0] + "." + indexArray[1] + "." + indexArray[2] + "...';\r\n" + "ALTER INDEX " + indexArray[3] + " on " + indexArray[0] + "." + indexArray[1] + "." + indexArray[2] + " REBUILD WITH (ONLINE = OFF, SORT_IN_TEMPDB = " + (Properties.Settings.Default.IndexManagerSortInTempDB != true ? "OFF" : "ON") + ");");
                    sqlQueryStringBuilder.AppendLine("GO");
                    sqlQueryStringBuilder.AppendLine("");
                }
            }

            return sqlQueryStringBuilder.ToString();
        }

        private void fixNowButton_Click(object sender, EventArgs e)
        {
            DialogResult = DialogResult.OK;
            this.Close();
        }

        private void cancelButton_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void copyToClipboardButton_Click(object sender, EventArgs e)
        {
            Clipboard.SetText(sqlScriptTextBox.Text);
        }

        private string removeSquareBrackets(string inputString)
        {
            return inputString.Replace("[", "").Replace("]", "");
        }
    }
}
